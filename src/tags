!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/userx\/Documents\/Dropbox\/EDITOR\/stable\/missing --run aclocal-1.11$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ALL_LINGUAS	Makefile	/^ALL_LINGUAS = $/;"	m
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CFLAGS	Makefile	/^AM_CFLAGS = \\$/;"	m
AM_CPPFLAGS	Makefile	/^AM_CPPFLAGS = \\$/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_V_CC	Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AR	Makefile	/^AR = ar$/;"	m
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/userx\/Documents\/Dropbox\/EDITOR\/stable\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/userx\/Documents\/Dropbox\/EDITOR\/stable\/missing --run autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/userx\/Documents\/Dropbox\/EDITOR\/stable\/missing --run automake-1.11$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
AboutHelpItem	menubar.h	/^	GtkWidget * AboutHelpItem;$/;"	m	struct:_menu	access:public
CATALOGS	Makefile	/^CATALOGS = $/;"	m
CATOBJEXT	Makefile	/^CATOBJEXT = .gmo$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
COPYRIGHT	definitions.h	84;"	d
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
ClearEditItem	menubar.h	/^	GtkWidget * ClearEditItem;$/;"	m	struct:_menu	access:public
CopyEditItem	menubar.h	/^	GtkWidget * CopyEditItem;$/;"	m	struct:_menu	access:public
CopyItem	toolbar.h	/^    GtkToolItem * CopyItem;$/;"	m	struct:_toolbar	access:public
CutEditItem	menubar.h	/^	GtkWidget * CutEditItem;$/;"	m	struct:_menu	access:public
CutItem	toolbar.h	/^    GtkToolItem * CutItem;$/;"	m	struct:_toolbar	access:public
DATADIRNAME	Makefile	/^DATADIRNAME = share$/;"	m
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(xeditor_SOURCES)$/;"	m
DLLTOOL	Makefile	/^DLLTOOL = false$/;"	m
DSYMUTIL	Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
ETAGS	Makefile	/^ETAGS = etags$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EditMenu	menubar.h	/^	GtkWidget * EditMenu;$/;"	m	struct:_menu	access:public
EditMenuItem	menubar.h	/^	GtkWidget * EditMenuItem;$/;"	m	struct:_menu	access:public
ExitFileItem	menubar.h	/^	GtkWidget * ExitFileItem;$/;"	m	struct:_menu	access:public
FGREP	Makefile	/^FGREP = \/usr\/bin\/grep -F$/;"	m
FileMenu	menubar.h	/^	GtkWidget * FileMenu;$/;"	m	struct:_menu	access:public
FileMenuItem	menubar.h	/^	GtkWidget * FileMenuItem;$/;"	m	struct:_menu	access:public
FirstSeparatorItem	toolbar.h	/^    GtkToolItem * FirstSeparatorItem;$/;"	m	struct:_toolbar	access:public
FontSelectItem	toolbar.h	/^	GtkToolItem * FontSelectItem;$/;"	m	struct:_toolbar	access:public
GETTEXT_PACKAGE	Makefile	/^GETTEXT_PACKAGE = xeditor$/;"	m
GMOFILES	Makefile	/^GMOFILES = $/;"	m
GMSGFMT	Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GREP	Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GTKDOC_CHECK	Makefile	/^GTKDOC_CHECK = $/;"	m
GTKDOC_DEPS_CFLAGS	Makefile	/^GTKDOC_DEPS_CFLAGS = $/;"	m
GTKDOC_DEPS_LIBS	Makefile	/^GTKDOC_DEPS_LIBS = $/;"	m
GTKDOC_MKPDF	Makefile	/^GTKDOC_MKPDF = $/;"	m
GTKDOC_REBASE	Makefile	/^GTKDOC_REBASE = true$/;"	m
HTML_DIR	Makefile	/^HTML_DIR = ${datadir}\/gtk-doc\/html$/;"	m
HelpMenu	menubar.h	/^	GtkWidget * HelpMenu;$/;"	m	struct:_menu	access:public
HelpMenuItem	menubar.h	/^	GtkWidget * HelpMenuItem;$/;"	m	struct:_menu	access:public
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTOBJEXT	Makefile	/^INSTOBJEXT = .mo$/;"	m
INTLLIBS	Makefile	/^INTLLIBS = $/;"	m
INTLTOOL_EXTRACT	Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_MERGE	Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_PERL	Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_UPDATE	Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_V_MERGE	Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL__v_MERGE_	Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_0	Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
LD	Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LINK	Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LIPO	Makefile	/^LIPO = $/;"	m
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LTCOMPILE	Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LangViewItem	menubar.h	/^	GtkWidget * LangViewItem;$/;"	m	struct:_menu	access:public
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/userx\/Documents\/Dropbox\/EDITOR\/stable\/missing --run makeinfo$/;"	m
MANIFEST_TOOL	Makefile	/^MANIFEST_TOOL = :$/;"	m
MKDIR_P	Makefile	/^MKDIR_P = \/usr\/bin\/mkdir -p$/;"	m
MKINSTALLDIRS	Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MSGFMT	Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT_OPTS	Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGMERGE	Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
Menu	menubar.h	/^typedef struct _menu Menu;$/;"	t	typeref:struct:_menu
MenuBar	menubar.h	/^	GtkWidget * MenuBar;$/;"	m	struct:_menu	access:public
MenuPrivate	menubar.h	/^typedef struct _menuprivate MenuPrivate;$/;"	t	typeref:struct:_menuprivate
NM	Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMEDIT	Makefile	/^NMEDIT = $/;"	m
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NewFileItem	menubar.h	/^	GtkWidget * NewFileItem;$/;"	m	struct:_menu	access:public
OBJDUMP	Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OTOOL	Makefile	/^OTOOL = $/;"	m
OTOOL64	Makefile	/^OTOOL64 = $/;"	m
OpenFileItem	menubar.h	/^	GtkWidget * OpenFileItem;$/;"	m	struct:_menu	access:public
OpenItem	toolbar.h	/^    GtkToolItem * OpenItem;$/;"	m	struct:_toolbar	access:public
PACKAGE	Makefile	/^PACKAGE = xeditor$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = xeditor$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = xeditor 0.3.1$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = xeditor$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 0.3.1$/;"	m
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PKG_CONFIG	Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG_LIBDIR	Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_PATH	Makefile	/^PKG_CONFIG_PATH = $/;"	m
POFILES	Makefile	/^POFILES = $/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POSUB	Makefile	/^POSUB = po$/;"	m
PO_IN_DATADIR_FALSE	Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_TRUE	Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
PasteEditEditem	menubar.h	/^	GtkWidget * PasteEditEditem;$/;"	m	struct:_menu	access:public
PasteItem	toolbar.h	/^    GtkToolItem * PasteItem;$/;"	m	struct:_toolbar	access:public
PrefEditItem	menubar.h	/^	GtkWidget * PrefEditItem;$/;"	m	struct:_menu	access:public
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RedoEditItem	menubar.h	/^	GtkWidget * RedoEditItem;$/;"	m	struct:_menu	access:public
RedoItem	toolbar.h	/^	GtkToolItem * RedoItem;$/;"	m	struct:_toolbar	access:public
SED	Makefile	/^SED = \/usr\/bin\/sed$/;"	m
SET_EXPORT_HOME	definitions.h	52;"	d
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SOURCES	Makefile	/^SOURCES = $(xeditor_SOURCES)$/;"	m
STRIP	Makefile	/^STRIP = strip$/;"	m
SaveAsFileItem	menubar.h	/^	GtkWidget * SaveAsFileItem;$/;"	m	struct:_menu	access:public
SaveFileItem	menubar.h	/^	GtkWidget * SaveFileItem;$/;"	m	struct:_menu	access:public
SaveItem	toolbar.h	/^	GtkToolItem * SaveItem;$/;"	m	struct:_toolbar	access:public
Scrolled	scrolled.h	/^typedef struct _scrolled Scrolled;$/;"	t	typeref:struct:_scrolled
ScrolledPrivate	scrolled.h	/^typedef struct _scrolledprivate ScrolledPrivate;$/;"	t	typeref:struct:_scrolledprivate
ScrolledWindow	scrolled.h	/^	GtkWidget * ScrolledWindow;$/;"	m	struct:_scrolled	access:public
SearchEditItem	menubar.h	/^	GtkWidget * SearchEditItem;$/;"	m	struct:_menu	access:public
SearchItem	toolbar.h	/^	GtkToolItem * SearchItem;$/;"	m	struct:_toolbar	access:public
SecondSeparatorItem	toolbar.h	/^	GtkToolItem * SecondSeparatorItem;$/;"	m	struct:_toolbar	access:public
SelectAllEditItem	menubar.h	/^	GtkWidget * SelectAllEditItem;$/;"	m	struct:_menu	access:public
SelectAllItem	toolbar.h	/^    GtkToolItem * SelectAllItem;$/;"	m	struct:_toolbar	access:public
SourceBuffer	scrolled.h	/^	GtkSourceBuffer * SourceBuffer;$/;"	m	struct:_scrolledprivate	access:public
SourceView	scrolled.h	/^	GtkWidget * SourceView;$/;"	m	struct:_scrolledprivate	access:public
SourceView	search.h	/^	GtkWidget * SourceView;$/;"	m	struct:_search	access:public
StatusBar	statusbar.h	/^typedef struct _statusbar StatusBar;$/;"	t	typeref:struct:_statusbar
ThirdSeparatorItem	toolbar.h	/^	GtkToolItem * ThirdSeparatorItem;$/;"	m	struct:_toolbar	access:public
ToolBar	toolbar.h	/^typedef struct _toolbar ToolBar;$/;"	t	typeref:struct:_toolbar
ToolBarPrivate	toolbar.h	/^typedef struct _toolbarprivate ToolBarPrivate;$/;"	t	typeref:struct:_toolbarprivate
USE_NLS	Makefile	/^USE_NLS = yes$/;"	m
UndoEditItem	menubar.h	/^	GtkWidget * UndoEditItem;$/;"	m	struct:_menu	access:public
UndoItem	toolbar.h	/^	GtkToolItem * UndoItem;$/;"	m	struct:_toolbar	access:public
VERSION	Makefile	/^VERSION = 0.3.1$/;"	m
ViewMenu	menubar.h	/^	GtkWidget * ViewMenu;$/;"	m	struct:_menu	access:public
ViewMenuItem	menubar.h	/^	GtkWidget * ViewMenuItem;$/;"	m	struct:_menu	access:public
ViewSbmenu	menubar.h	/^	GtkWidget * ViewSbmenu;$/;"	m	struct:_menu	access:public
Window	window.h	/^typedef struct _window Window;$/;"	t	typeref:struct:_window
WindowPrivate	window.h	/^typedef struct _windowprivate WindowPrivate;$/;"	t	typeref:struct:_windowprivate
XEDITOR_CFLAGS	Makefile	/^XEDITOR_CFLAGS = -pthread -I\/usr\/include\/gtksourceview-3.0 -I\/usr\/include\/libxml2 -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libdrm -I\/usr\/include\/libpng16 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng16 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/glib-2.0\/include $/;"	m
XEDITOR_LIBS	Makefile	/^XEDITOR_LIBS = -lgtksourceview-3.0 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
XEditor	xeditor.h	/^typedef struct _xeditor XEditor;$/;"	t	typeref:struct:_xeditor
XEditorPrivate	xeditor.h	/^typedef struct _xeditorprivate XEditorPrivate;$/;"	t	typeref:struct:_xeditorprivate
XGETTEXT	Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
X_DEFAULT_FILENAME	definitions.h	68;"	d
X_EDITOR_CONFIG_FILE	definitions.h	96;"	d
X_EDITOR_DEFAULT_MIMETYPE	definitions.h	92;"	d
X_EDITOR_FONT_CONFIG_FILE	definitions.h	100;"	d
X_EDITOR_PROGRAM_NAME	definitions.h	60;"	d
X_EDITOR_REPO	definitions.h	88;"	d
X_EDITOR_SPLASH_ADDR	definitions.h	104;"	d
X_EDITOR_VERSION	definitions.h	80;"	d
X_USER_DEFAULT_PATH	definitions.h	56;"	d
X_WINDOW_DEFAULT_TITLE	definitions.h	64;"	d
X_WINDOW_DEFAULT_X_LEN	definitions.h	72;"	d
X_WINDOW_DEFAULT_Y_LEN	definitions.h	76;"	d
_DEFINITIONS_H	definitions.h	21;"	d
_MENUBAR_H	menubar.h	20;"	d
_SCROLLED_H	scrolled.h	20;"	d
_SEARCH_H	search.h	20;"	d
_STATUSBAR_H	statusbar.h	20;"	d
_TOOLBAR_H	toolbar.h	20;"	d
_WINDOW_H	window.h	21;"	d
_XEDITOR_H	xeditor.h	21;"	d
_menu	menubar.h	/^struct _menu {$/;"	s
_menu::AboutHelpItem	menubar.h	/^	GtkWidget * AboutHelpItem;$/;"	m	struct:_menu	access:public
_menu::ClearEditItem	menubar.h	/^	GtkWidget * ClearEditItem;$/;"	m	struct:_menu	access:public
_menu::CopyEditItem	menubar.h	/^	GtkWidget * CopyEditItem;$/;"	m	struct:_menu	access:public
_menu::CutEditItem	menubar.h	/^	GtkWidget * CutEditItem;$/;"	m	struct:_menu	access:public
_menu::EditMenu	menubar.h	/^	GtkWidget * EditMenu;$/;"	m	struct:_menu	access:public
_menu::EditMenuItem	menubar.h	/^	GtkWidget * EditMenuItem;$/;"	m	struct:_menu	access:public
_menu::ExitFileItem	menubar.h	/^	GtkWidget * ExitFileItem;$/;"	m	struct:_menu	access:public
_menu::FileMenu	menubar.h	/^	GtkWidget * FileMenu;$/;"	m	struct:_menu	access:public
_menu::FileMenuItem	menubar.h	/^	GtkWidget * FileMenuItem;$/;"	m	struct:_menu	access:public
_menu::HelpMenu	menubar.h	/^	GtkWidget * HelpMenu;$/;"	m	struct:_menu	access:public
_menu::HelpMenuItem	menubar.h	/^	GtkWidget * HelpMenuItem;$/;"	m	struct:_menu	access:public
_menu::LangViewItem	menubar.h	/^	GtkWidget * LangViewItem;$/;"	m	struct:_menu	access:public
_menu::MenuBar	menubar.h	/^	GtkWidget * MenuBar;$/;"	m	struct:_menu	access:public
_menu::NewFileItem	menubar.h	/^	GtkWidget * NewFileItem;$/;"	m	struct:_menu	access:public
_menu::OpenFileItem	menubar.h	/^	GtkWidget * OpenFileItem;$/;"	m	struct:_menu	access:public
_menu::PasteEditEditem	menubar.h	/^	GtkWidget * PasteEditEditem;$/;"	m	struct:_menu	access:public
_menu::PrefEditItem	menubar.h	/^	GtkWidget * PrefEditItem;$/;"	m	struct:_menu	access:public
_menu::RedoEditItem	menubar.h	/^	GtkWidget * RedoEditItem;$/;"	m	struct:_menu	access:public
_menu::SaveAsFileItem	menubar.h	/^	GtkWidget * SaveAsFileItem;$/;"	m	struct:_menu	access:public
_menu::SaveFileItem	menubar.h	/^	GtkWidget * SaveFileItem;$/;"	m	struct:_menu	access:public
_menu::SearchEditItem	menubar.h	/^	GtkWidget * SearchEditItem;$/;"	m	struct:_menu	access:public
_menu::SelectAllEditItem	menubar.h	/^	GtkWidget * SelectAllEditItem;$/;"	m	struct:_menu	access:public
_menu::UndoEditItem	menubar.h	/^	GtkWidget * UndoEditItem;$/;"	m	struct:_menu	access:public
_menu::ViewMenu	menubar.h	/^	GtkWidget * ViewMenu;$/;"	m	struct:_menu	access:public
_menu::ViewMenuItem	menubar.h	/^	GtkWidget * ViewMenuItem;$/;"	m	struct:_menu	access:public
_menu::ViewSbmenu	menubar.h	/^	GtkWidget * ViewSbmenu;$/;"	m	struct:_menu	access:public
_menu::accel_group	menubar.h	/^	GtkAccelGroup * accel_group;$/;"	m	struct:_menu	access:public
_menu::cViewItem	menubar.h	/^	GtkWidget * cViewItem;$/;"	m	struct:_menu	access:public
_menu::cppViewItem	menubar.h	/^	GtkWidget * cppViewItem;$/;"	m	struct:_menu	access:public
_menu::htmlViewItem	menubar.h	/^	GtkWidget * htmlViewItem;$/;"	m	struct:_menu	access:public
_menu::jvViewItem	menubar.h	/^	GtkWidget * jvViewItem;$/;"	m	struct:_menu	access:public
_menu::phpViewItem	menubar.h	/^	GtkWidget * phpViewItem;$/;"	m	struct:_menu	access:public
_menu::private_data	menubar.h	/^	MenuPrivate * private_data;$/;"	m	struct:_menu	access:public
_menu::pyViewItem	menubar.h	/^	GtkWidget * pyViewItem;$/;"	m	struct:_menu	access:public
_menuprivate	menubar.h	/^struct _menuprivate {$/;"	s
_menuprivate::auto_ident	menubar.h	/^	gboolean auto_ident, $/;"	m	struct:_menuprivate	access:public
_menuprivate::highlight	menubar.h	/^			 highlight,$/;"	m	struct:_menuprivate	access:public
_menuprivate::hl_correntline	menubar.h	/^			 hl_correntline;$/;"	m	struct:_menuprivate	access:public
_menuprivate::line_numbers	menubar.h	/^			 line_numbers,$/;"	m	struct:_menuprivate	access:public
_menuprivate::opacity	menubar.h	/^	gfloat opacity;$/;"	m	struct:_menuprivate	access:public
_menuprivate::tab_width	menubar.h	/^	gint tab_width;$/;"	m	struct:_menuprivate	access:public
_scrolled	scrolled.h	/^struct _scrolled {$/;"	s
_scrolled::ScrolledWindow	scrolled.h	/^	GtkWidget * ScrolledWindow;$/;"	m	struct:_scrolled	access:public
_scrolled::private_data	scrolled.h	/^	ScrolledPrivate * private_data;$/;"	m	struct:_scrolled	access:public
_scrolledprivate	scrolled.h	/^struct _scrolledprivate {$/;"	s
_scrolledprivate::SourceBuffer	scrolled.h	/^	GtkSourceBuffer * SourceBuffer;$/;"	m	struct:_scrolledprivate	access:public
_scrolledprivate::SourceView	scrolled.h	/^	GtkWidget * SourceView;$/;"	m	struct:_scrolledprivate	access:public
_scrolledprivate::clipboard	scrolled.h	/^	GtkClipboard * clipboard;$/;"	m	struct:_scrolledprivate	access:public
_scrolledprivate::font_description	scrolled.h	/^	PangoFontDescription * font_description;$/;"	m	struct:_scrolledprivate	access:public
_scrolledprivate::language	scrolled.h	/^	GtkSourceLanguage * language;$/;"	m	struct:_scrolledprivate	access:public
_scrolledprivate::lm	scrolled.h	/^	GtkSourceLanguageManager * lm;$/;"	m	struct:_scrolledprivate	access:public
_scrolledprivate::mime_type	scrolled.h	/^	gchar * mime_type;$/;"	m	struct:_scrolledprivate	access:public
_search	search.h	/^typedef struct _search {$/;"	s
_search::SourceView	search.h	/^	GtkWidget * SourceView;$/;"	m	struct:_search	access:public
_search::box	search.h	/^	GtkWidget * box,$/;"	m	struct:_search	access:public
_search::e_button	search.h	/^			  * e_button;$/;"	m	struct:_search	access:public
_search::n_button	search.h	/^			  * n_button,$/;"	m	struct:_search	access:public
_search::r_button	search.h	/^			  * r_button,$/;"	m	struct:_search	access:public
_search::r_entry	search.h	/^			  * r_entry,$/;"	m	struct:_search	access:public
_search::rn_button	search.h	/^			  * rn_button,$/;"	m	struct:_search	access:public
_search::s_button	search.h	/^			  * s_button,$/;"	m	struct:_search	access:public
_search::s_entry	search.h	/^			  * s_entry,$/;"	m	struct:_search	access:public
_search::searchflg	search.h	/^	gboolean * searchflg;$/;"	m	struct:_search	access:public
_statusbar	statusbar.h	/^struct _statusbar {$/;"	s
_statusbar::sBar	statusbar.h	/^	GtkWidget * sBar;$/;"	m	struct:_statusbar	access:public
_toolbar	toolbar.h	/^struct _toolbar {$/;"	s
_toolbar::CopyItem	toolbar.h	/^    GtkToolItem * CopyItem;$/;"	m	struct:_toolbar	access:public
_toolbar::CutItem	toolbar.h	/^    GtkToolItem * CutItem;$/;"	m	struct:_toolbar	access:public
_toolbar::FirstSeparatorItem	toolbar.h	/^    GtkToolItem * FirstSeparatorItem;$/;"	m	struct:_toolbar	access:public
_toolbar::FontSelectItem	toolbar.h	/^	GtkToolItem * FontSelectItem;$/;"	m	struct:_toolbar	access:public
_toolbar::OpenItem	toolbar.h	/^    GtkToolItem * OpenItem;$/;"	m	struct:_toolbar	access:public
_toolbar::PasteItem	toolbar.h	/^    GtkToolItem * PasteItem;$/;"	m	struct:_toolbar	access:public
_toolbar::RedoItem	toolbar.h	/^	GtkToolItem * RedoItem;$/;"	m	struct:_toolbar	access:public
_toolbar::SaveItem	toolbar.h	/^	GtkToolItem * SaveItem;$/;"	m	struct:_toolbar	access:public
_toolbar::SearchItem	toolbar.h	/^	GtkToolItem * SearchItem;$/;"	m	struct:_toolbar	access:public
_toolbar::SecondSeparatorItem	toolbar.h	/^	GtkToolItem * SecondSeparatorItem;$/;"	m	struct:_toolbar	access:public
_toolbar::SelectAllItem	toolbar.h	/^    GtkToolItem * SelectAllItem;$/;"	m	struct:_toolbar	access:public
_toolbar::ThirdSeparatorItem	toolbar.h	/^	GtkToolItem * ThirdSeparatorItem;$/;"	m	struct:_toolbar	access:public
_toolbar::UndoItem	toolbar.h	/^	GtkToolItem * UndoItem;$/;"	m	struct:_toolbar	access:public
_toolbar::private_data	toolbar.h	/^	ToolBarPrivate * private_data;$/;"	m	struct:_toolbar	access:public
_toolbar::tBar	toolbar.h	/^	GtkWidget * tBar;$/;"	m	struct:_toolbar	access:public
_toolbarprivate	toolbar.h	/^struct _toolbarprivate {$/;"	s
_toolbarprivate::font_desc	toolbar.h	/^	gchar * font_desc;$/;"	m	struct:_toolbarprivate	access:public
_window	window.h	/^struct _window {$/;"	s
_window::box	window.h	/^	GtkWidget * box;$/;"	m	struct:_window	access:public
_window::private_data	window.h	/^	WindowPrivate * private_data;$/;"	m	struct:_window	access:public
_window::window	window.h	/^	GtkWidget * window;$/;"	m	struct:_window	access:public
_windowprivate	window.h	/^struct _windowprivate {$/;"	s
_windowprivate::title	window.h	/^	gchar * title;$/;"	m	struct:_windowprivate	access:public
_xeditor	xeditor.h	/^struct _xeditor {$/;"	s
_xeditor::menu	xeditor.h	/^	Menu * menu;$/;"	m	struct:_xeditor	access:public
_xeditor::private_data	xeditor.h	/^	XEditorPrivate * private_data;$/;"	m	struct:_xeditor	access:public
_xeditor::scrolled	xeditor.h	/^	Scrolled * scrolled;$/;"	m	struct:_xeditor	access:public
_xeditor::statusbar	xeditor.h	/^	StatusBar * statusbar;$/;"	m	struct:_xeditor	access:public
_xeditor::toolbar	xeditor.h	/^	ToolBar * toolbar;$/;"	m	struct:_xeditor	access:public
_xeditor::win	xeditor.h	/^	Window * win;$/;"	m	struct:_xeditor	access:public
_xeditorprivate	xeditor.h	/^struct _xeditorprivate {$/;"	s
_xeditorprivate::file	xeditor.h	/^	GFile * file;	$/;"	m	struct:_xeditorprivate	access:public
_xeditorprivate::filename	xeditor.h	/^	gchar * filename;$/;"	m	struct:_xeditorprivate	access:public
_xeditorprivate::save	xeditor.h	/^	gboolean save;$/;"	m	struct:_xeditorprivate	access:public
_xeditorprivate::search_flag	xeditor.h	/^	gboolean search_flag;$/;"	m	struct:_xeditorprivate	access:public
abs_builddir	Makefile	/^abs_builddir = \/home\/userx\/Documents\/Dropbox\/EDITOR\/stable\/src$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/home\/userx\/Documents\/Dropbox\/EDITOR\/stable\/src$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/home\/userx\/Documents\/Dropbox\/EDITOR\/stable$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/home\/userx\/Documents\/Dropbox\/EDITOR\/stable$/;"	m
ac_ct_AR	Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
accel_group	menubar.h	/^	GtkAccelGroup * accel_group;$/;"	m	struct:_menu	access:public
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = \\$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__tar	Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__untar	Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_CCLD_	Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	Makefile	/^am__v_CCLD_0 = @echo "  CCLD  " $@;$/;"	m
am__v_CC_	Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	Makefile	/^am__v_CC_0 = @echo "  CC    " $@;$/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN   " $@;$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_lt_	Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	Makefile	/^am__v_lt_0 = --silent$/;"	m
am_xeditor_OBJECTS	Makefile	/^am_xeditor_OBJECTS = main.$(OBJEXT) scrolled.$(OBJEXT) \\$/;"	m
auto_ident	menubar.h	/^	gboolean auto_ident, $/;"	m	struct:_menuprivate	access:public
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = xeditor$(EXEEXT)$/;"	m
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
box	search.h	/^	GtkWidget * box,$/;"	m	struct:_search	access:public
box	window.h	/^	GtkWidget * box;$/;"	m	struct:_window	access:public
build	Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = unknown$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
cViewItem	menubar.h	/^	GtkWidget * cViewItem;$/;"	m	struct:_menu	access:public
clipboard	scrolled.h	/^	GtkClipboard * clipboard;$/;"	m	struct:_scrolledprivate	access:public
cppViewItem	menubar.h	/^	GtkWidget * cppViewItem;$/;"	m	struct:_menu	access:public
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
e_button	search.h	/^			  * e_button;$/;"	m	struct:_search	access:public
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
file	xeditor.h	/^	GFile * file;	$/;"	m	struct:_xeditorprivate	access:public
filename	xeditor.h	/^	gchar * filename;$/;"	m	struct:_xeditorprivate	access:public
font_desc	toolbar.h	/^	gchar * font_desc;$/;"	m	struct:_toolbarprivate	access:public
font_description	scrolled.h	/^	PangoFontDescription * font_description;$/;"	m	struct:_scrolledprivate	access:public
highlight	menubar.h	/^			 highlight,$/;"	m	struct:_menuprivate	access:public
hl_correntline	menubar.h	/^			 hl_correntline;$/;"	m	struct:_menuprivate	access:public
host	Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = unknown$/;"	m
htmlViewItem	menubar.h	/^	GtkWidget * htmlViewItem;$/;"	m	struct:_menu	access:public
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
install_sh	Makefile	/^install_sh = ${SHELL} \/home\/userx\/Documents\/Dropbox\/EDITOR\/stable\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
intltool__v_merge_options_	Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_0	Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
jvViewItem	menubar.h	/^	GtkWidget * jvViewItem;$/;"	m	struct:_menu	access:public
language	scrolled.h	/^	GtkSourceLanguage * language;$/;"	m	struct:_scrolledprivate	access:public
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
line_numbers	menubar.h	/^			 line_numbers,$/;"	m	struct:_menuprivate	access:public
lm	scrolled.h	/^	GtkSourceLanguageManager * lm;$/;"	m	struct:_scrolledprivate	access:public
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
main	main.c	/^int main (int argc, char *argv[]) {$/;"	f	signature:(int argc, char *argv[])
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
menu	xeditor.h	/^	Menu * menu;$/;"	m	struct:_xeditor	access:public
mime_type	scrolled.h	/^	gchar * mime_type;$/;"	m	struct:_scrolledprivate	access:public
mkdir_p	Makefile	/^mkdir_p = \/usr\/bin\/mkdir -p$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(SHELL) $(top_srcdir)\/mkinstalldirs$/;"	m
n_button	search.h	/^			  * n_button,$/;"	m	struct:_search	access:public
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
opacity	menubar.h	/^	gfloat opacity;$/;"	m	struct:_menuprivate	access:public
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
phpViewItem	menubar.h	/^	GtkWidget * phpViewItem;$/;"	m	struct:_menu	access:public
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/xeditor$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/xeditor$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/xeditor$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/xeditor$/;"	m
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
private_data	menubar.h	/^	MenuPrivate * private_data;$/;"	m	struct:_menu	access:public
private_data	scrolled.h	/^	ScrolledPrivate * private_data;$/;"	m	struct:_scrolled	access:public
private_data	toolbar.h	/^	ToolBarPrivate * private_data;$/;"	m	struct:_toolbar	access:public
private_data	window.h	/^	WindowPrivate * private_data;$/;"	m	struct:_window	access:public
private_data	xeditor.h	/^	XEditorPrivate * private_data;$/;"	m	struct:_xeditor	access:public
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
psdir	Makefile	/^psdir = ${docdir}$/;"	m
pyViewItem	menubar.h	/^	GtkWidget * pyViewItem;$/;"	m	struct:_menu	access:public
r_button	search.h	/^			  * r_button,$/;"	m	struct:_search	access:public
r_entry	search.h	/^			  * r_entry,$/;"	m	struct:_search	access:public
rn_button	search.h	/^			  * rn_button,$/;"	m	struct:_search	access:public
sBar	statusbar.h	/^	GtkWidget * sBar;$/;"	m	struct:_statusbar	access:public
s_button	search.h	/^			  * s_button,$/;"	m	struct:_search	access:public
s_entry	search.h	/^			  * s_entry,$/;"	m	struct:_search	access:public
save	xeditor.h	/^	gboolean save;$/;"	m	struct:_xeditorprivate	access:public
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
scrolled	xeditor.h	/^	Scrolled * scrolled;$/;"	m	struct:_xeditor	access:public
search_app	search.h	/^}search_app;$/;"	t	typeref:struct:_search
search_flag	xeditor.h	/^	gboolean search_flag;$/;"	m	struct:_xeditorprivate	access:public
searchflg	search.h	/^	gboolean * searchflg;$/;"	m	struct:_search	access:public
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
srcdir	Makefile	/^srcdir = .$/;"	m
statusbar	xeditor.h	/^	StatusBar * statusbar;$/;"	m	struct:_xeditor	access:public
subdir	Makefile	/^subdir = src$/;"	m
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
tBar	toolbar.h	/^	GtkWidget * tBar;$/;"	m	struct:_toolbar	access:public
tab_width	menubar.h	/^	gint tab_width;$/;"	m	struct:_menuprivate	access:public
target_alias	Makefile	/^target_alias = $/;"	m
title	window.h	/^	gchar * title;$/;"	m	struct:_windowprivate	access:public
toolbar	xeditor.h	/^	ToolBar * toolbar;$/;"	m	struct:_xeditor	access:public
top_build_prefix	Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	Makefile	/^top_builddir = ..$/;"	m
top_srcdir	Makefile	/^top_srcdir = ..$/;"	m
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
win	xeditor.h	/^	Window * win;$/;"	m	struct:_xeditor	access:public
window	window.h	/^	GtkWidget * window;$/;"	m	struct:_window	access:public
x_copy_callback	toolbar.h	/^void x_copy_callback(GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_create_menus	menubar.c	/^void x_create_menus (Menu * menu){$/;"	f	signature:(Menu * menu)
x_create_menus	menubar.h	/^void x_create_menus (Menu *);$/;"	p	signature:(Menu *)
x_cut_callback	toolbar.h	/^void x_cut_callback(GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_dialog_warn_quit	xeditor.c	/^void x_dialog_warn_quit(GtkWidget * widget, gpointer  data){$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_dialog_warn_quit	xeditor.h	/^void x_dialog_warn_quit(GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_editor_apply_font_config	xeditor.c	/^void x_editor_apply_font_config (XEditor * xeditor) {$/;"	f	signature:(XEditor * xeditor)
x_editor_apply_font_config	xeditor.h	/^void x_editor_apply_font_config (XEditor *);$/;"	p	signature:(XEditor *)
x_editor_config	xeditor.c	/^void x_editor_config(XEditor * xeditor) {$/;"	f	signature:(XEditor * xeditor)
x_editor_config	xeditor.h	/^void x_editor_config(XEditor *);$/;"	p	signature:(XEditor *)
x_editor_config_menu	xeditor.c	/^void x_editor_config_menu (XEditor * xeditor) {$/;"	f	signature:(XEditor * xeditor)
x_editor_config_menu	xeditor.h	/^void x_editor_config_menu (XEditor *);$/;"	p	signature:(XEditor *)
x_editor_connect_all_signals	xeditor.c	/^void x_editor_connect_all_signals (XEditor * xeditor){$/;"	f	signature:(XEditor * xeditor)
x_editor_connect_all_signals	xeditor.h	/^void x_editor_connect_all_signals(XEditor *);$/;"	p	signature:(XEditor *)
x_editor_delete_event_callback	xeditor.c	/^static gboolean x_editor_delete_event_callback (GtkWidget * widget, gpointer data){$/;"	f	file:	signature:(GtkWidget * widget, gpointer data)
x_editor_destroy_callback	xeditor.c	/^void x_editor_destroy_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_editor_destroy_callback	xeditor.h	/^void x_editor_destroy_callback(GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_editor_dialog_warn	xeditor.c	/^void x_editor_dialog_warn (gchar * warning) {$/;"	f	signature:(gchar * warning)
x_editor_dialog_warn	xeditor.h	/^void x_editor_dialog_warn (gchar *);$/;"	p	signature:(gchar *)
x_editor_get_file	xeditor.c	/^GFile * x_editor_get_file (XEditor * xeditor){$/;"	f	signature:(XEditor * xeditor)
x_editor_get_filename	xeditor.c	/^gchar * x_editor_get_filename (XEditor * xeditor) {$/;"	f	signature:(XEditor * xeditor)
x_editor_get_save	xeditor.c	/^gboolean x_editor_get_save (XEditor * xeditor) {$/;"	f	signature:(XEditor * xeditor)
x_editor_get_save_status	xeditor.c	/^gboolean * x_editor_get_save_status (XEditor * xeditor) {$/;"	f	signature:(XEditor * xeditor)
x_editor_get_search_flag	xeditor.c	/^gboolean * x_editor_get_search_flag (XEditor * xeditor) {$/;"	f	signature:(XEditor * xeditor)
x_editor_get_search_flag_status	xeditor.c	/^gboolean x_editor_get_search_flag_status (XEditor * xeditor) {$/;"	f	signature:(XEditor * xeditor)
x_editor_init	xeditor.c	/^void x_editor_init(XEditor * xeditor) {$/;"	f	signature:(XEditor * xeditor)
x_editor_init	xeditor.h	/^void x_editor_init(XEditor *);$/;"	p	signature:(XEditor *)
x_editor_new	xeditor.c	/^XEditor * x_editor_new(void) {	$/;"	f	signature:(void)
x_editor_pack_all	xeditor.c	/^void x_editor_pack_all (XEditor * xeditor) {$/;"	f	signature:(XEditor * xeditor)
x_editor_pack_all	xeditor.h	/^void x_editor_pack_all (XEditor *);$/;"	p	signature:(XEditor *)
x_editor_save_font_config	xeditor.c	/^void x_editor_save_font_config (XEditor * xeditor){$/;"	f	signature:(XEditor * xeditor)
x_editor_save_font_config	xeditor.h	/^void x_editor_save_font_config (XEditor *);$/;"	p	signature:(XEditor *)
x_editor_save_textbuffer_content	xeditor.c	/^void x_editor_save_textbuffer_content(XEditor * xeditor, gchar * content) {$/;"	f	signature:(XEditor * xeditor, gchar * content)
x_editor_save_textbuffer_content	xeditor.h	/^void x_editor_save_textbuffer_content (XEditor *, gchar *);$/;"	p	signature:(XEditor *, gchar *)
x_editor_search_new	search.c	/^search_app * x_editor_search_new(XEditor * xeditor) {$/;"	f	signature:(XEditor * xeditor)
x_editor_set_file	xeditor.c	/^void x_editor_set_file (XEditor * xeditor, GFile * file_t) {$/;"	f	signature:(XEditor * xeditor, GFile * file_t)
x_editor_set_file	xeditor.h	/^void x_editor_set_file(XEditor *, GFile *);$/;"	p	signature:(XEditor *, GFile *)
x_editor_set_filename	xeditor.c	/^void x_editor_set_filename (XEditor * xeditor, gchar * filename) {$/;"	f	signature:(XEditor * xeditor, gchar * filename)
x_editor_set_filename	xeditor.h	/^void x_editor_set_filename (XEditor *, gchar *);$/;"	p	signature:(XEditor *, gchar *)
x_editor_set_save_status	xeditor.c	/^void x_editor_set_save_status (XEditor * xeditor, gboolean status) {$/;"	f	signature:(XEditor * xeditor, gboolean status)
x_editor_set_save_status	xeditor.h	/^void x_editor_set_save_status (XEditor *, gboolean);$/;"	p	signature:(XEditor *, gboolean)
x_editor_set_search_flag	xeditor.c	/^void x_editor_set_search_flag (XEditor * xeditor, gboolean status){$/;"	f	signature:(XEditor * xeditor, gboolean status)
x_editor_set_search_flag	xeditor.h	/^void x_editor_set_search_flag (XEditor *, gboolean);$/;"	p	signature:(XEditor *, gboolean)
x_editor_show_all	xeditor.c	/^void x_editor_show_all(XEditor * xeditor){$/;"	f	signature:(XEditor * xeditor)
x_editor_show_all	xeditor.h	/^void x_editor_show_all (XEditor *);$/;"	p	signature:(XEditor *)
x_editor_splash_create_and_show	xeditor.c	/^void x_editor_splash_create_and_show(void) {$/;"	f	signature:(void)
x_editor_splash_create_and_show	xeditor.h	/^void x_editor_splash_create_and_show ();$/;"	p	signature:()
x_editor_splash_delay	xeditor.c	/^gboolean x_editor_splash_delay(gpointer data) {$/;"	f	signature:(gpointer data)
x_font_select_callback	toolbar.c	/^void x_font_select_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_font_select_callback	toolbar.h	/^void x_font_select_callback(GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_mark_callback	statusbar.c	/^void x_mark_callback (GtkTextBuffer * TextBuffer, gpointer new, gpointer mark, gpointer data){$/;"	f	signature:(GtkTextBuffer * TextBuffer, gpointer new, gpointer mark, gpointer data)
x_mark_callback	statusbar.h	/^void x_mark_callback(GtkTextBuffer *, gpointer, gpointer, gpointer);$/;"	p	signature:(GtkTextBuffer *, gpointer, gpointer, gpointer)
x_menu_about_dialog_callback	menubar.c	/^void x_menu_about_dialog_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_about_dialog_callback	menubar.h	/^void x_menu_about_dialog_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_clear_source_buffer_callback	menubar.c	/^void x_menu_clear_source_buffer_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_clear_source_buffer_callback	menubar.h	/^void x_menu_clear_source_buffer_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_combo_box_set_active	menubar.c	/^void x_menu_combo_box_set_active (Menu * menu, GtkComboBox * combo) {$/;"	f	signature:(Menu * menu, GtkComboBox * combo)
x_menu_combo_box_set_active	menubar.h	/^void x_menu_combo_box_set_active (Menu *, GtkComboBox *);$/;"	p	signature:(Menu *, GtkComboBox *)
x_menu_configure_accel	menubar.c	/^void x_menu_configure_accel (Menu * menu, gpointer data) {$/;"	f	signature:(Menu * menu, gpointer data)
x_menu_configure_accel	menubar.h	/^void x_menu_configure_accel (Menu *, gpointer);$/;"	p	signature:(Menu *, gpointer)
x_menu_copy_selected_range	menubar.c	/^void x_menu_copy_selected_range (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_copy_selected_range	menubar.h	/^void x_menu_copy_selected_range (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_cut_selected_range	menubar.c	/^void x_menu_cut_selected_range (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_cut_selected_range	menubar.h	/^void x_menu_cut_selected_range (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_get_auto_ident	menubar.c	/^gboolean * x_menu_get_auto_ident (Menu * menu) {$/;"	f	signature:(Menu * menu)
x_menu_get_auto_ident_status	menubar.c	/^gboolean x_menu_get_auto_ident_status (Menu * menu) {$/;"	f	signature:(Menu * menu)
x_menu_get_highlight	menubar.c	/^gboolean * x_menu_get_highlight (Menu * menu) {$/;"	f	signature:(Menu * menu)
x_menu_get_highlight_corrent_line	menubar.c	/^gboolean * x_menu_get_highlight_corrent_line (Menu * menu) {$/;"	f	signature:(Menu * menu)
x_menu_get_highlight_corrent_line_status	menubar.c	/^gboolean x_menu_get_highlight_corrent_line_status (Menu * menu) {$/;"	f	signature:(Menu * menu)
x_menu_get_highlight_status	menubar.c	/^gboolean x_menu_get_highlight_status (Menu * menu) {$/;"	f	signature:(Menu * menu)
x_menu_get_line_numbers	menubar.c	/^gboolean * x_menu_get_line_numbers (Menu * menu) {$/;"	f	signature:(Menu * menu)
x_menu_get_scale_value	menubar.c	/^gfloat * x_menu_get_scale_value (Menu * menu) {$/;"	f	signature:(Menu * menu)
x_menu_get_scale_value_status	menubar.c	/^gfloat x_menu_get_scale_value_status (Menu * menu) {$/;"	f	signature:(Menu * menu)
x_menu_get_show_line_numbers_status	menubar.c	/^gboolean x_menu_get_show_line_numbers_status (Menu * menu) {$/;"	f	signature:(Menu * menu)
x_menu_get_tab_width	menubar.c	/^gint x_menu_get_tab_width (Menu * menu) {$/;"	f	signature:(Menu * menu)
x_menu_get_tab_width_ref	menubar.c	/^gint * x_menu_get_tab_width_ref (Menu * menu) {$/;"	f	signature:(Menu * menu)
x_menu_init	menubar.c	/^void x_menu_init(Menu * menu) {$/;"	f	signature:(Menu * menu)
x_menu_init	menubar.h	/^void x_menu_init (Menu *);$/;"	p	signature:(Menu *)
x_menu_load_file_content_callback	menubar.c	/^void x_menu_load_file_content_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_load_file_content_callback	menubar.h	/^void x_menu_load_file_content_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_load_file_content_to_text_buffer	menubar.c	/^gboolean x_menu_load_file_content_to_text_buffer(gpointer data, gchar * filename) {$/;"	f	signature:(gpointer data, gchar * filename)
x_menu_new	menubar.c	/^Menu * x_menu_new() {$/;"	f
x_menu_new_file_callback	menubar.c	/^void x_menu_new_file_callback (GtkWidget * widget, gpointer data){$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_new_file_callback	menubar.h	/^void x_menu_new_file_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_pack_menus	menubar.c	/^void x_menu_pack_menus (Menu * menu){$/;"	f	signature:(Menu * menu)
x_menu_pack_menus	menubar.h	/^void x_menu_pack_menus (Menu *);$/;"	p	signature:(Menu *)
x_menu_paste	menubar.c	/^void x_menu_paste (GtkWidget * widget, gpointer data){$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_paste	menubar.h	/^void x_menu_paste (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_pref_window_callback	menubar.c	/^void x_menu_pref_window_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_pref_window_callback	menubar.h	/^void x_menu_pref_window_callback(GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_pref_window_close_callback	menubar.c	/^void x_menu_pref_window_close_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_pref_window_close_callback	menubar.h	/^void x_menu_pref_window_close_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_redo_callback	menubar.c	/^void x_menu_redo_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_redo_callback	menubar.h	/^void x_menu_redo_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_save_as_content_to_selected_file_callback	menubar.c	/^void x_menu_save_as_content_to_selected_file_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_save_as_content_to_selected_file_callback	menubar.h	/^void x_menu_save_as_content_to_selected_file_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_save_content_to_selected_file_callback	menubar.c	/^void x_menu_save_content_to_selected_file_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_save_content_to_selected_file_callback	menubar.h	/^void x_menu_save_content_to_selected_file_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_scale_callback	menubar.c	/^void x_menu_scale_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_scale_callback	menubar.h	/^void x_menu_scale_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_search_callback	menubar.c	/^void x_menu_search_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_search_callback	menubar.h	/^void x_menu_search_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_select_all_callback	menubar.c	/^void x_menu_select_all_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_select_all_callback	menubar.h	/^void x_menu_select_all_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_set_auto_ident	menubar.c	/^void x_menu_set_auto_ident (Menu * menu, gboolean status) {$/;"	f	signature:(Menu * menu, gboolean status)
x_menu_set_auto_ident	menubar.h	/^void x_menu_set_auto_ident (Menu *, gboolean);$/;"	p	signature:(Menu *, gboolean)
x_menu_set_auto_ident_callback	menubar.c	/^void x_menu_set_auto_ident_callback(GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_set_auto_ident_callback	menubar.h	/^void x_menu_set_auto_ident_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_set_highlight	menubar.c	/^void x_menu_set_highlight (Menu * menu, gboolean status) {$/;"	f	signature:(Menu * menu, gboolean status)
x_menu_set_highlight	menubar.h	/^void x_menu_set_highlight (Menu *, gboolean);$/;"	p	signature:(Menu *, gboolean)
x_menu_set_highlight_callback	menubar.c	/^void x_menu_set_highlight_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_set_highlight_callback	menubar.h	/^void x_menu_set_highlight_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_set_highlight_corrent_line	menubar.c	/^void x_menu_set_highlight_corrent_line (Menu * menu, gboolean status) {$/;"	f	signature:(Menu * menu, gboolean status)
x_menu_set_highlight_corrent_line	menubar.h	/^void x_menu_set_highlight_corrent_line (Menu *, gboolean);$/;"	p	signature:(Menu *, gboolean)
x_menu_set_highlight_corrent_line_callback	menubar.c	/^void x_menu_set_highlight_corrent_line_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_set_highlight_corrent_line_callback	menubar.h	/^void x_menu_set_highlight_corrent_line_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_set_scale_value	menubar.c	/^void x_menu_set_scale_value (Menu * menu, gfloat value) {$/;"	f	signature:(Menu * menu, gfloat value)
x_menu_set_scale_value	menubar.h	/^void x_menu_set_scale_value (Menu *, gfloat);$/;"	p	signature:(Menu *, gfloat)
x_menu_set_show_line_numbers	menubar.c	/^void x_menu_set_show_line_numbers (Menu * menu, gboolean status) {$/;"	f	signature:(Menu * menu, gboolean status)
x_menu_set_show_line_numbers	menubar.h	/^void x_menu_set_show_line_numbers (Menu *, gboolean);$/;"	p	signature:(Menu *, gboolean)
x_menu_set_show_line_numbers_callback	menubar.c	/^void x_menu_set_show_line_numbers_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_set_show_line_numbers_callback	menubar.h	/^void x_menu_set_show_line_numbers_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_set_tab_width	menubar.c	/^void x_menu_set_tab_width (Menu * menu, gint width) {$/;"	f	signature:(Menu * menu, gint width)
x_menu_set_tab_width	menubar.h	/^void x_menu_set_tab_width (Menu *, gint);$/;"	p	signature:(Menu *, gint)
x_menu_set_tab_width_callback	menubar.c	/^void x_menu_set_tab_width_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_set_tab_width_callback	menubar.h	/^void x_menu_set_tab_width_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_undo_callback	menubar.c	/^void x_menu_undo_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_undo_callback	menubar.h	/^void x_menu_undo_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_view_c_item_callback	menubar.c	/^void x_menu_view_c_item_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_view_c_item_callback	menubar.h	/^void x_menu_view_c_item_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_view_cpp_item_callback	menubar.c	/^void x_menu_view_cpp_item_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_view_cpp_item_callback	menubar.h	/^void x_menu_view_cpp_item_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_view_html_item_callback	menubar.c	/^void x_menu_view_html_item_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_view_html_item_callback	menubar.h	/^void x_menu_view_html_item_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_view_java_item_callback	menubar.c	/^void x_menu_view_java_item_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_view_java_item_callback	menubar.h	/^void x_menu_view_java_item_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_view_php_item_callback	menubar.c	/^void x_menu_view_php_item_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_view_php_item_callback	menubar.h	/^void x_menu_view_php_item_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_menu_view_py_item_callback	menubar.c	/^void x_menu_view_py_item_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_menu_view_py_item_callback	menubar.h	/^void x_menu_view_py_item_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_paste_callback	toolbar.h	/^void x_paste_callback(GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_replace_all_button_clicked	search.c	/^void x_replace_all_button_clicked (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_replace_all_button_clicked	search.h	/^void x_replace_all_button_clicked (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_replace_button_clicked	search.c	/^void x_replace_button_clicked (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_replace_button_clicked	search.h	/^void x_replace_button_clicked (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_scrolled_get_clipboard	scrolled.c	/^GtkClipboard * x_scrolled_get_clipboard (Scrolled * swindow) {$/;"	f	signature:(Scrolled * swindow)
x_scrolled_get_font_description	scrolled.c	/^PangoFontDescription * x_scrolled_get_font_description (Scrolled * swindow) {$/;"	f	signature:(Scrolled * swindow)
x_scrolled_get_font_name	scrolled.c	/^gchar * x_scrolled_get_font_name (Scrolled * swindow) {$/;"	f	signature:(Scrolled * swindow)
x_scrolled_get_language	scrolled.c	/^GtkSourceLanguage * x_scrolled_get_language (Scrolled * swindow) {$/;"	f	signature:(Scrolled * swindow)
x_scrolled_get_language_manager	scrolled.c	/^GtkSourceLanguageManager * x_scrolled_get_language_manager (Scrolled * swindow) {$/;"	f	signature:(Scrolled * swindow)
x_scrolled_get_mimetype	scrolled.c	/^gchar * x_scrolled_get_mimetype (Scrolled * swindow) {$/;"	f	signature:(Scrolled * swindow)
x_scrolled_get_source_buffer	scrolled.c	/^GtkSourceBuffer * x_scrolled_get_source_buffer (Scrolled * swindow) {$/;"	f	signature:(Scrolled * swindow)
x_scrolled_get_source_view	scrolled.c	/^GtkWidget * x_scrolled_get_source_view (Scrolled * swindow) {$/;"	f	signature:(Scrolled * swindow)
x_scrolled_get_sourcebuffer_content	scrolled.c	/^gchar * x_scrolled_get_sourcebuffer_content (Scrolled * scrolled) {$/;"	f	signature:(Scrolled * scrolled)
x_scrolled_init	scrolled.c	/^void x_scrolled_init (Scrolled * swindow){$/;"	f	signature:(Scrolled * swindow)
x_scrolled_init	scrolled.h	/^void x_scrolled_init(Scrolled *);$/;"	p	signature:(Scrolled *)
x_scrolled_language_self_config	scrolled.c	/^void x_scrolled_language_self_config(Scrolled * swindow, gchar * filename) {$/;"	f	signature:(Scrolled * swindow, gchar * filename)
x_scrolled_language_self_config	scrolled.h	/^void x_scrolled_language_self_config (Scrolled *, gchar *);$/;"	p	signature:(Scrolled *, gchar *)
x_scrolled_new	scrolled.c	/^Scrolled * x_scrolled_new () {$/;"	f
x_scrolled_set_font_desc	scrolled.c	/^void x_scrolled_set_font_desc (Scrolled * swindow, PangoFontDescription * font_desc) {$/;"	f	signature:(Scrolled * swindow, PangoFontDescription * font_desc)
x_scrolled_set_font_desc	scrolled.h	/^void x_scrolled_set_font_desc (Scrolled *, PangoFontDescription *);$/;"	p	signature:(Scrolled *, PangoFontDescription *)
x_scrolled_set_language	scrolled.c	/^void x_scrolled_set_language (Scrolled * swindow, GtkSourceLanguage * lang) {$/;"	f	signature:(Scrolled * swindow, GtkSourceLanguage * lang)
x_scrolled_set_language	scrolled.h	/^void x_scrolled_set_language (Scrolled *, GtkSourceLanguage *);$/;"	p	signature:(Scrolled *, GtkSourceLanguage *)
x_scrolled_set_language_manager	scrolled.c	/^void x_scrolled_set_language_manager (Scrolled * swindow, GtkSourceLanguageManager * lnmg) {$/;"	f	signature:(Scrolled * swindow, GtkSourceLanguageManager * lnmg)
x_scrolled_set_language_manager	scrolled.h	/^void x_scrolled_set_language_manager (Scrolled *, GtkSourceLanguageManager *);$/;"	p	signature:(Scrolled *, GtkSourceLanguageManager *)
x_scrolled_set_mimetype	scrolled.c	/^void x_scrolled_set_mimetype (Scrolled * swindow, gchar * mimetype) {$/;"	f	signature:(Scrolled * swindow, gchar * mimetype)
x_scrolled_set_mimetype	scrolled.h	/^void x_scrolled_set_mimetype (Scrolled *, gchar * mimetype);$/;"	p	signature:(Scrolled *, gchar * mimetype)
x_scrolled_window_new	scrolled.c	/^GtkWidget * x_scrolled_window_new() {$/;"	f
x_search_button_clicked	search.c	/^void x_search_button_clicked (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_search_button_clicked	search.h	/^void x_search_button_clicked (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_search_default_search	search.c	/^void x_search_default_search (GtkTextView * tView, const gchar * text, GtkTextIter * iter){$/;"	f	signature:(GtkTextView * tView, const gchar * text, GtkTextIter * iter)
x_search_default_search	search.h	/^void x_search_default_search (GtkTextView *, const gchar *, GtkTextIter *);$/;"	p	signature:(GtkTextView *, const gchar *, GtkTextIter *)
x_search_destroy	search.c	/^void x_search_destroy (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_search_destroy	search.h	/^void x_search_destroy (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_search_get_entry	search.c	/^GtkWidget * x_search_get_entry (search_app * search) {$/;"	f	signature:(search_app * search)
x_search_get_source_view	search.c	/^GtkWidget * x_search_get_source_view (search_app * search) {$/;"	f	signature:(search_app * search)
x_search_next_button_clicked	search.c	/^void x_search_next_button_clicked (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_search_next_button_clicked	search.h	/^void x_search_next_button_clicked (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_select_all_callback	toolbar.h	/^void x_select_all_callback(GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_statusbar_new	statusbar.c	/^StatusBar * x_statusbar_new (void) {$/;"	f	signature:(void)
x_statusbar_update_callback	statusbar.c	/^void x_statusbar_update_callback (GtkTextBuffer * TextBuffer, gpointer data){$/;"	f	signature:(GtkTextBuffer * TextBuffer, gpointer data)
x_statusbar_update_callback	statusbar.h	/^void x_statusbar_update_callback(GtkTextBuffer *, gpointer);$/;"	p	signature:(GtkTextBuffer *, gpointer)
x_text_buffer_modified_notify_callback	scrolled.c	/^void x_text_buffer_modified_notify_callback (GtkTextBuffer * TextBuffer, gpointer data) {$/;"	f	signature:(GtkTextBuffer * TextBuffer, gpointer data)
x_text_buffer_modified_notify_callback	scrolled.h	/^void x_text_buffer_modified_notify_callback(GtkTextBuffer *, gpointer);$/;"	p	signature:(GtkTextBuffer *, gpointer)
x_text_view_set_default_font	scrolled.c	/^void x_text_view_set_default_font (Scrolled * swindow, gchar * font_desc) {$/;"	f	signature:(Scrolled * swindow, gchar * font_desc)
x_text_view_set_default_font	scrolled.h	/^void x_text_view_set_default_font (Scrolled *, gchar *);$/;"	p	signature:(Scrolled *, gchar *)
x_toolbar_boxing	toolbar.c	/^void x_toolbar_boxing (ToolBar * toolbar){$/;"	f	signature:(ToolBar * toolbar)
x_toolbar_boxing	toolbar.h	/^void x_toolbar_boxing(ToolBar *);$/;"	p	signature:(ToolBar *)
x_toolbar_get_font_desc	toolbar.c	/^gchar * x_toolbar_get_font_desc (ToolBar * toolbar) {$/;"	f	signature:(ToolBar * toolbar)
x_toolbar_init	toolbar.c	/^void x_toolbar_init(ToolBar * toolbar) {$/;"	f	signature:(ToolBar * toolbar)
x_toolbar_init	toolbar.h	/^void x_toolbar_init(ToolBar *);$/;"	p	signature:(ToolBar *)
x_toolbar_load_font_config	toolbar.c	/^gboolean x_toolbar_load_font_config (ToolBar * toolbar) {$/;"	f	signature:(ToolBar * toolbar)
x_toolbar_new	toolbar.c	/^ToolBar * x_toolbar_new(void) {$/;"	f	signature:(void)
x_toolbar_set_font_desc	toolbar.c	/^void x_toolbar_set_font_desc (ToolBar * toolbar, gchar * font) {$/;"	f	signature:(ToolBar * toolbar, gchar * font)
x_toolbar_set_font_desc	toolbar.h	/^void x_toolbar_set_font_desc (ToolBar *, gchar *);$/;"	p	signature:(ToolBar *, gchar *)
x_window_close_callback	xeditor.c	/^void x_window_close_callback (GtkWidget * widget, gpointer data) {$/;"	f	signature:(GtkWidget * widget, gpointer data)
x_window_close_callback	xeditor.h	/^void x_window_close_callback (GtkWidget *, gpointer);$/;"	p	signature:(GtkWidget *, gpointer)
x_window_get_title	window.c	/^gchar * x_window_get_title(Window * win) {$/;"	f	signature:(Window * win)
x_window_init	window.c	/^void x_window_init(Window * win) {$/;"	f	signature:(Window * win)
x_window_init	window.h	/^void x_window_init(Window *);$/;"	p	signature:(Window *)
x_window_new	window.c	/^Window * x_window_new(void) {$/;"	f	signature:(void)
x_window_set_default_title	window.c	/^void x_window_set_default_title (Window * win) {$/;"	f	signature:(Window * win)
x_window_set_default_title	window.h	/^void x_window_set_default_title (Window *);$/;"	p	signature:(Window *)
x_window_set_title	window.c	/^void x_window_set_title(Window * win, gchar * title){$/;"	f	signature:(Window * win, gchar * title)
x_window_set_title	window.h	/^void x_window_set_title (Window *, gchar *);$/;"	p	signature:(Window *, gchar *)
xeditor_DEPENDENCIES	Makefile	/^xeditor_DEPENDENCIES = $(am__DEPENDENCIES_1)$/;"	m
xeditor_LDADD	Makefile	/^xeditor_LDADD = $(XEDITOR_LIBS)$/;"	m
xeditor_LDFLAGS	Makefile	/^xeditor_LDFLAGS = \\$/;"	m
xeditor_LINK	Makefile	/^xeditor_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
xeditor_OBJECTS	Makefile	/^xeditor_OBJECTS = $(am_xeditor_OBJECTS)$/;"	m
xeditor_SOURCES	Makefile	/^xeditor_SOURCES = \\$/;"	m
